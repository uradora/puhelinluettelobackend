{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Filter","filtre","setShowAll","setFiltre","value","onChange","event","target","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","updatedPerson","put","Notification","message","text","isError","className","App","useState","persons","setPersons","setNewName","setNewNumber","showAll","setMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","window","confirm","p","setTimeout","preventDefault","map","personToUpdate","find","idOfPerson","returnedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b89f2c3.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <div>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => deletePerson({ person })}>delete</button>\n    </div>\n  )\n}\n\nexport default Person","import React from \"react\"\n\nconst Filter = ({ filtre, setShowAll, setFiltre }) => {\n\n  const handleFilterChange = (event) => {\n    setShowAll(false);\n    setFiltre(event.target.value)\n  }\n\n  return (\n    <div>\n      filter shown with <input value={filtre} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input \n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((response) => response.data);\n}\n\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\n  return request.then((response) => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from \"react\"\nimport './../index.css'\n\nconst Notification = ({ message }) => {\n  if (message.text === null) {\n    return null\n  } else if (message.isError === true) {\n    return (\n      <div className='error'>\n        {message.text}\n      </div>\n    )\n  }\n\n  return (\n    <div className='success'>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [filtre, setFiltre] = useState('')\n  const [message, setMessage] = useState({ \n    text: null, \n    isError: false\n  })\n\n  const hook = () => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons)\n    })\n  }\n\n  useEffect(hook, [])\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(\n        (person) =>\n          person.name.toLowerCase().includes(filtre.toLowerCase()) === true\n    )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const names = persons.map((person) => person.name)\n    if (names.includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const personToUpdate = persons.find(\n          (person) => person.name === newName\n        )\n        const idOfPerson = personToUpdate.id\n        const updatedPerson = {\n          name: newName,\n          number: newNumber\n        }\n        if (personToUpdate) {\n          personService\n            .update(idOfPerson, updatedPerson)\n            .then((returnedPerson) => {\n              setPersons(\n                persons.map((person) => \n                person.id !== idOfPerson ? person : returnedPerson)\n                )\n                setMessage({\n                  text: `${returnedPerson.name} number updated`,\n                  isError: false\n                })\n                setTimeout(() => {\n                  setMessage({ text: null, isError: false })\n                }, 5000)\n              })\n              .catch((error) => {\n                setMessage({\n                  text: `Information of ${newName} has already been removed from the server`,\n                  isError: true\n                })\n                setTimeout(() => {\n                  setMessage({ text: null, isError: true })\n                }, 5000)\n              })\n            }\n        }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(newPerson)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage({\n            text: `Added ${returnedPerson.name}`,\n            isError: false\n          })\n          setTimeout(() => {\n            setMessage({ text: null, isError: false })\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const deletePerson = ({ person }) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n        .remove(person.id)\n        .then(setPersons(persons.filter((p) => p.id !== person.id)))\n        setMessage({\n          text: `Deleted ${person.name}`,\n          isError: false\n        })\n        setTimeout(() => {\n          setMessage({ text: null, isError: false })\n        }, 5000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <div>\n        <Filter filtre={filtre} setShowAll={setShowAll} setFiltre={setFiltre} />\n      </div>\n      <div>\n        <PersonForm \n          addPerson={addPerson}\n          newName={newName}\n          newNumber={newNumber}\n          handleNameChange={handleNameChange}\n          handleNumberChange={handleNumberChange}\n        /> \n      </div>\n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map((person) => (\n          <Person key={person.name} person={person} deletePerson={deletePerson} />\n        ))} \n      </ul>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}